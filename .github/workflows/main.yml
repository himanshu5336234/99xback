name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  buildAndTest:
    name: CI Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['14.x']

    steps:
      - uses: actions/checkout@v2
      
  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['14.x']
        appname: ['99x_Backend']
        deploy-group: ['staging']
        #s3-bucket: ['aws-codedeploy-deployments']
        #s3-filename: ['staging-aws-codedeploy-${{ github.sha }}']

    needs: buildAndTest
    steps:
      - uses: actions/checkout@v2

      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

    
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # Deploy push to AWS S3
      #- name: AWS Deploy push
      #  run: |
      #    aws deploy push \
      #    --application-name ${{ matrix.appname }} \
      #    --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
      #    --ignore-hidden-files \
      #    --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
      #    --source .
      # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
            --application-name ${{ matrix.appname }} \
            --deployment-group-name ${{ matrix.deploy-group }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --file-exists-behavior OVERWRITE \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
